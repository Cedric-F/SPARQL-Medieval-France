{"version":3,"sources":["icons sync /^/.*/.webp$","icons/Cathedral.webp","icons/City.webp","Components/Marker.js","Components/Map.js","Components/List.js","Components/Filter.js","Components/Fact.js","App.js","registerServiceWorker.js","index.js","icons/Castle.webp"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Marker","name","this","props","title","className","Link","to","pathname","process","replace","state","tabIndex","src","require","alt","Component","config","Map","scrollwheel","mapTypeControl","mapTypeControlOptions","mapTypeIds","styles","style","locations","list","l","forEach","i","push","key","type","lat","coordinates","lng","filter","onToggle","role","Button","aria-label","onClick","Glyphicon","glyph","bootstrapURLKeys","languages","libraries","options","mapOptions","bind","defaultCenter","center","defaultZoom","zoom","markers","RegExp","test","defaultProps","mapTypeId","List","query","target","textContent","console","log","set","isClicked","handleClick","photo","thumbnail","source","Filter","lists","toggled","htmlFor","placeholder","onChange","value","maxLength","renderLists","href","Fact","context","handleClose","show","data","setState","resetQuery","history","building","b","Castle","castle","location","getWiki","tooltip","Tooltip","Modal","onHide","Header","closeButton","Title","replaceAll","Body","Image","responsive","OverlayTrigger","overlay","rel","dangerouslySetInnerHTML","__html","abstract","Footer","App","axios","get","params","then","response","results","bindings","triple","hypernym","endsWith","castles","tokens","split","length","long","index","self","findIndex","catch","error","fetchData","Route","exact","path","render","handleQuery","toggle","MapStyle","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","dotenv","ReactDOM","BrowserRouter","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9600eae7.chunk.js","sourcesContent":["var map = {\n\t\"./Castle.webp\": 67,\n\t\"./Cathedral.webp\": 168,\n\t\"./City.webp\": 169\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 167;","module.exports = __webpack_public_path__ + \"static/media/Cathedral.36b2a563.webp\";","module.exports = __webpack_public_path__ + \"static/media/City.0ea4fa96.webp\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Marker extends Component {\r\n\r\n  render() {\r\n    const { name } = this.props;\r\n\r\n    return (\r\n      <div title={name} className=\"marker\">\r\n        <Link to={{pathname: process.env.PUBLIC_URL + '/' + name.replace(/\\s/g, '_'), state: {name: name} }} tabIndex=\"-1\"><img src={require(`../icons/Castle.webp`)} alt={name}/></Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Marker;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Glyphicon, Button } from 'react-bootstrap';\r\nimport Marker from './Marker';\r\n\r\nrequire('dotenv').config();\r\n\r\nexport default class Map extends Component {\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 48,\r\n      lng: 2.3522\r\n    },\r\n    zoom: 5,\r\n    mapTypeId: 'terrain'\r\n  };\r\n\r\n  /*\r\n   * toggles some map options.\r\n   * Most important one is the custom style.\r\n   */\r\n  mapOptions() {\r\n    return {\r\n      scrollwheel: true,\r\n      mapTypeControl: true,\r\n      mapTypeControlOptions: {\r\n        mapTypeIds: ['terrain']\r\n      },\r\n      styles: this.props.style\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Loop over the locations and renders a Marker component for each one, with the corresponding category and coordinates.\r\n   */\r\n  markers(locations) {\r\n    let list = [];\r\n    for (let l in locations) {\r\n      locations[l].forEach((e, i) =>\r\n        list.push(<Marker key={e.name + '-' + i} type={l} /*source={e.source}*/ name={e.name} /*photo={e.thumbnail}*/ lat={e.coordinates.lat} lng={e.coordinates.lng}/>)\r\n      )\r\n    }\r\n    return list\r\n  }\r\n\r\n  render() {\r\n    const { locations, filter, onToggle } = this.props;\r\n    return (\r\n      <main className=\"map\" tabIndex=\"-1\" role=\"application\">\r\n        <Button tabIndex=\"0\" name=\"Toggle\" aria-label=\"Toggle Side Panel\" className=\"toggle-btn\" onClick={onToggle}>\r\n          <Glyphicon glyph=\"menu-hamburger\" />\r\n        </Button>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{\r\n            key: process.env.REACT_APP_API_KEY, // Enable the Google Maps API\r\n            languages: ['en', 'fr'],\r\n            libraries:'places'\r\n          }}\r\n          options={this.mapOptions.bind(this)}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n        {\r\n          /*\r\n           * Renders the markers whose names match the query value.\r\n           * An empty query test relates to true so all the markers are rendered by default.\r\n           */\r\n          this.markers(locations).map(e => new RegExp(filter, 'i').test(e.props.name) && e)\r\n        }\r\n\r\n        </GoogleMapReact>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class List extends Component {\r\n\r\n  handleClick(e) {\r\n    this.props.query(e.target.textContent, true);\r\n    console.log(this);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { type, set, filter, isClicked } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"list-view-title\" tabIndex=\"0\" aria-label={`List of ${type}s.`}>\r\n          <img src={require(`../icons/${type}.webp`)} alt={type + ' logo'}/>\r\n          <h2>{type}</h2>\r\n        </div>\r\n        <ul className=\"list-view\">\r\n          {\r\n            /*\r\n             * Loop over the category's locations and for each, only display those whose name matches the query value.\r\n             * Testing a string against an empty string will always be truthy, so all the markers are displayed by default.\r\n             * isClicked is true only when clicking on a list-view item.\r\n             * When isClicked is true, hide all markers except the clicked location, but keep all list-items available\r\n             * so the user can choose another location.\r\n             */\r\n            set.map(e =>\r\n              new RegExp(!isClicked ? filter : '', 'ig').test(e.name) &&\r\n\r\n                <li key={e.name} onClick={this.handleClick.bind(this)} className=\"list-view-item\"><Link to={{pathname: process.env.PUBLIC_URL + '/' + e.name.replace(/\\s/g, '_'), state: {type: e.type, name: e.name, photo: e.thumbnail, source: e.source}}}>{e.name}</Link></li>\r\n\r\n            )\r\n          }\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport List from './List';\r\n\r\nexport default class Filter extends Component {\r\n\r\n  /*\r\n   * Renders the 3 categories and their respective content.\r\n   */\r\n\r\n  renderLists(locations) {\r\n    let lists = [];\r\n    for (let l in locations)\r\n      lists.push(<List isClicked={this.props.isClicked} query={this.props.query} filter={this.props.filter} key={l} type={l} set={locations[l]}/>)\r\n    return lists;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { locations, query, toggled } = this.props;\r\n\r\n    return (\r\n      <aside className={`side-wrap ${toggled && 'toggle'}`}>\r\n        <div className=\"side-panel\">\r\n          <h1>List view</h1>\r\n          <label htmlFor=\"search\" className=\"input-label\" tabIndex=\"0\">Search</label>\r\n          {/*\r\n            * The input field receives the App's \"handleQuery\" method passed down as a the \"query\" prop.\r\n            * On change, update the App's state with the new query so it can render the corresponding elements only.\r\n            */}\r\n          <input aria-label=\"Start typing your research.\" placeholder=\"Search by name...\" tabIndex=\"1\" id=\"search\" onChange={(e) => query(e.target.value, false)} type=\"text\" maxLength={30} className=\"search-input\" />\r\n          {\r\n            this.renderLists(locations)\r\n          }\r\n          <a className=\"back-to-top\" href='#search' aria-label=\"Back to the top.\">Back to the top.</a>\r\n        </div>\r\n      </aside>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Modal, Button, Image, Tooltip, OverlayTrigger} from 'react-bootstrap';\r\n\r\nexport default class Fact extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: true,\r\n      data: {}\r\n    };\r\n  }\r\n\r\n  /*\r\n   * When closing the Modal, reset the query to display back the whole list view, and route back to the \"home page\"\r\n   */\r\n  handleClose() {\r\n    this.setState({ show: false });\r\n    this.props.resetQuery('');\r\n    this.props.history.push(`${process.env.PUBLIC_URL}/`);\r\n  }\r\n\r\n  getWiki(building) {\r\n\r\n    console.log(\"getWiki\")\r\n\r\n    const b = this.props.locations.Castle.filter(castle => castle.name == building)[0];\r\n    if (b) {\r\n      this.setState({data: b});\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n   * Once the component is mounted, get the data to render.\r\n   */\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    const { name } = this.props.data.location.state;\r\n    this.getWiki(name);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.data)\r\n    const { name, photo, source } = this.props.data.location.state;\r\n    const tooltip = (\r\n      <Tooltip id=\"modal-tooltip\" tabIndex=\"0\">{source ? `Wikipedia and ${source}` : 'Wikipedia'}</Tooltip>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n       <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{name.replaceAll('_', ' ')}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p className=\"source\">\r\n              <Image className=\"thumbnail\" src={this.state.data.thumbnail} alt={`A photo of ${name}`} tabIndex=\"0\" responsive />\r\n              <OverlayTrigger overlay={tooltip}>\r\n                <a href={`https://en.wikipedia.org/wiki/${name}`} target='_blank' rel=\"noopener noreferrer\" >Sources</a>\r\n              </OverlayTrigger>\r\n            </p>\r\n\r\n            <hr />\r\n\r\n            <h4 tabIndex=\"0\">History</h4>\r\n            {\r\n              /*\r\n               * The wikipedia article is returned as a raw text,\r\n               * So we use this method to parse the html tags.\r\n               */\r\n            }\r\n            <p dangerouslySetInnerHTML={{__html: this.state.data.abstract}} tabIndex=\"0\" />\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.handleClose} name=\"Close\" aria-label=\"Close the Info Window\">Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n// import { Route, BrowserRouter as Router } from 'react-router-dom'\r\nimport './App.css';\r\nimport MapStyle from './map-style.json'; // A home-made \"paper\" map style to fit in the \"medieval\" theme.\r\n/*\r\n * A list of places to render in the application.\r\n * It consists of an array of 3 categories (Cities, Cathedrals, Castles) and a total of 39 locations.\r\n */\r\nimport axios from 'axios';\r\n\r\nimport locations from './locations.json';\r\nimport Map from './Components/Map';\r\nimport Filter from './Components/Filter';\r\nimport Fact from './Components/Fact';\r\n\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toggled: true,\r\n      query: '',\r\n      isClicked: false,\r\n      locations: {\r\n        Castle: []\r\n      }\r\n    };\r\n  }\r\n\r\n  handleQuery(e, isClicked) {\r\n    this.setState({query: e, isClicked: isClicked})\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({toggled: !this.state.toggled});\r\n  }\r\n\r\n  fetchData() {\r\n    const endpoint = \"http://dbpedia.org/sparql\";\r\n    const query = `PREFIX dct: <http://purl.org/dc/terms/>\r\n                    PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>\r\n                    PREFIX dbo: <http://dbpedia.org/ontology/>\r\n                    PREFIX dbc: <http://dbpedia.org/resource/Category:>\r\n                    PREFIX gold: <http://purl.org/linguistics/gold/>\r\n                    SELECT DISTINCT *\r\n                    WHERE\r\n                    {\r\n                       ?building dct:subject dbc:Châteaux_in_France ;\r\n                                 dbo:wikiPageWikiLink ?castles .\r\n                       ?castles  dbo:abstract ?abstract ;\r\n                                 gold:hypernym ?hypernym .\r\n                       ?castles  dbo:thumbnail ?thumbnail .\r\n                       ?castles  geo:lat ?lat .\r\n                       ?castles  geo:long ?long\r\n                       FILTER (  LANG (?abstract) = 'en')\r\n                     }`\r\n    axios.get(endpoint, {\r\n      params: {\r\n        query: query\r\n      }\r\n    }).then(response => {\r\n      const locations = this.state.locations;\r\n      locations.Castle = response.data.results.bindings.filter(triple =>\r\n        triple.hypernym.value.endsWith(\"/Castle\") ||\r\n        triple.hypernym.value.endsWith(\"/Standing\") ||\r\n        triple.hypernym.value.endsWith(\"/Château\")\r\n      ).map(triple => {\r\n        if (triple.castles)\r\n        {\r\n          let tokens = triple.castles.value.split('/');\r\n          const ret = {\r\n            name: tokens[tokens.length - 1],\r\n            abstract: triple.abstract.value,\r\n            thumbnail: triple.thumbnail.value,\r\n            coordinates: {\r\n              lat: triple.lat.value,\r\n              lng: triple.long.value\r\n            }\r\n          };\r\n          return ret;\r\n        }\r\n      }).filter((castle, index, self) => castle && self.findIndex(o => o.name === castle.name) === index)\r\n      this.setState({locations: locations});\r\n    }).catch(error => {\r\n      console.error(error);\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route exact path={`${process.env.PUBLIC_URL}/:Place`} render={({location, history}) => {console.log(location, history); return <Fact locations={this.state.locations} resetQuery={this.handleQuery.bind(this)} history={history} data={{location}} />}}/>\r\n          {/*\r\n            * Filter is the Side Panel containing the search input field and the list view.\r\n            * We pass the handleQuery method as a prop so it can update the app state with the query value\r\n            * and then pass this value to both the list-view AND the map\r\n            * so it can render the corresponding list items and markers\r\n            */}\r\n        <Filter toggled={this.state.toggled} filter={this.state.query} isClicked={this.state.isClicked} query={this.handleQuery.bind(this)} locations={this.state.locations}/>\r\n          {/*\r\n            * Holds the Google Map, provided by google-map-react package.\r\n            * Pass down the query value, map style and location list to it.\r\n            */}\r\n        <Map onToggle={this.toggle.bind(this)} filter={this.state.query} isClicked={this.state.isClicked} style={MapStyle} locations={this.state.locations}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter><App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\nregisterServiceWorker();","module.exports = __webpack_public_path__ + \"static/media/Castle.c26c8752.webp\";"],"sourceRoot":""}